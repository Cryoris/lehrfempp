language: cpp
sudo: true

env:
  global:
    - HUNTER_ROOT="${TRAVIS_BUILD_DIR}/hunter"
    - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"

cache:
  directories:
    - $TRAVIS_BUILD_DIR/deps
    - $TRAVIS_BUILD_DIR/hunter

branches:
  except:
    - gh-pages
     
stages:
  #- clang-format
  #- clang-tidy
  - compile_test
  #- doxygen 
            
  
jobs:
  include:
    # - stage: lint
      # os: linux
      # addons:
        # apt:
          # sources: ['llvm-toolchain-trusty-6.0', 'ubuntu-toolchain-r-test']
          # packages: ['clang-format-6.0']
      # script: './travis/run-clang-format.py -r --clang-format-executable clang-format-6.0 --color always ./lib/'
    # - stage: clang-tidy
      # os: linux
      # addons:
        # apt:
          # sources: ['llvm-toolchain-trusty-6.0', 'ubuntu-toolchain-r-test']
          # packages: ['clang-tidy-6.0']
      # script: "./travis/run_clang_tidy.sh"
    # # Linux gcc
    - stage: compile_test
      os: linux 
      compiler: gcc
      env:
        - COMPILER=g++-7
        - BUILD_TYPE='Debug'
      addons: 
        apt:
          update: true
          sources: ['ubuntu-toolchain-r-test']
          packages: 
            - g++-7
      script: ./compile_test.sh
      
    - stage: compile_test
      os: linux 
      compiler: gcc
      env:
        - COMPILER=g++-7
        - BUILD_TYPE='Release'
      addons: 
        apt:
          update: true
          sources: ['ubuntu-toolchain-r-test']
          packages: 
            - g++-7
      script: ./compile_test.sh
        
    # Linux Clang
    - stage: compile_test
      os: linux
      compiler: clang
      env: 
        - COMPILER='clang++-5.0'
        - BUILD_TYPE='Debug'
      addons: 
        apt:
          sources: ['llvm-toolchain-trusty-5.0', 'ubuntu-toolchain-r-test']
          packages: ['clang-5.0', 'g++-7']
      script: ./compile_test.sh   
     
    - stage: compile_test
      os: linux
      compiler: clang
      env: 
        - COMPILER='clang++-5.0'
        - BUILD_TYPE='Release'
      addons: 
        apt:
          sources: ['llvm-toolchain-trusty-5.0', 'ubuntu-toolchain-r-test']
          packages: ['clang-5.0', 'g++-7']
      script: ./compile_test.sh   
    
    # OSX Builds
    - stage: compile_test
      os: osx
      osx_image: xcode8.3
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Debug'
      script: ./compile_test.sh
    
    - stage: compile_test
      os: osx
      osx_image: xcode8.3
      compiler: clang
      env: COMPILER='clang++' BUILD_TYPE='Release'
      script: ./compile_test.sh
        
    # # Deploy doxygen documentation using builtin GitHub Pages support
    # - stage: doxygen
      # os: linux 
      # compiler: gcc
      # addons: 
        # apt:
          # sources: ['ubuntu-toolchain-r-test']
          # packages: 
            # - doxygen
            # - graphviz
      # script: |
        # cd $TRAVIS_BUILD_DIR/doc/doxygen
        # doxygen --version
        # doxygen Doxyfile
      # deploy:
        # provider: pages
        # skip_cleanup: true
        # local_dir: ./doc/doxygen/html
        # github_token: $GITHUB_API_KEY
        # on:
          # branch: master
